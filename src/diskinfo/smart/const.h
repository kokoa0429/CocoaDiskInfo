#ifndef COCOA_DISK_INFO_SMART_CONSTANT_H_
#define COCOA_DISK_INFO_SMART_CONSTANT_H_

namespace Diskinfo{
namespace SMART{
	enum class CONSTANT : uint32_t{
			RawReadErrorRate = 0x01,
			ThrouputPerformance,
			SpinUpTime,
			StartStopCount,
			ReallocatedSectorsCount,
			ReadChannelMargin,
			SeekErrorRate,
			SeekTimePerformance,
			PowerOnHours,
			SpinRetryCount,
			CalibrationRetryCount,
			SoftReadErrorRate,
			CurrentHeliumLevel = 0x16,
			AvailableReservedSpace = 0xAA,
			SSDProgramFailCount,
			SSDEraseFailCount,
			SSDWearLevelingCount,
			UnexpectedPowerLossCount,
			PowerLossProtectionFailure,
			EraseFailCount,
			WearRangeDelta,
			UsedReservedBlockCountTotal = 0xB3,
			UnusedReservedBlockCountTotal,
			ProgramFailCountTotal,
			EraseFailCountAlt,
			RuntimeBadBlock,
			EndToEndErroe,
			HeadStability,
			InducedOpVibrationDetection,
			ReportedUncorrectableErrors,
			CommandTimeout,
			HighFlyWrites,
			AirflowTemperature,
			GsenseErrorRate,
			PoweroffRetractCount,
			LoadCycleCount,
			TemperatureCelcius,
			HardwareRCCRecoverd,
			ReallocationEventCouont,
			CurrentPendingSectorCount,
			OfflineScanUncorrectableSectorCount,
			UltraDMACRCErrorCount,
			WriteErrorRate,
			SoftReadErrorRateAlt,
			DataAddressMarkError,
			RunOutCance,
			SoftECCCorrection,
			ThermalAsperityRate,
			FlyingHeight,
			SpinHighCurrent,
			SpinBuzz,
			OfflineSeekPerformance,
			VibrationDuringWrite,
			VibrationDuringRead,
			ShockDuringWrite,
			DiskShift = 0xDC,
			GSenseErrorRate,
			LoadedHours,
			LoadUnloadRetryCount,
			LoadFriction,
			LoadUnloadCycleCount,
			LoadInTime,
			TorqueAmplificationCount,
			PowerOffRetractCount,
			GMRHeadAmplitude = 0xE6,
			Temperature,
			AvailableReservedSpaceAlt,
			PowerOnHoursAlt,
			AverageEraseCount,
			GoodBlockCount,
			TransferErrorRate = 0xF0,
			TotalLBAsWritten,
			TotalLBAsRead,
			TotalLBAsWrittenExpanded,
			TotalLBAsReadExpanded,
			NANDWrites = 0xF9,
			ReadErrorRetryRate,
			MinimumSparesRemaining,
			NewlyAddedBadFlashBlock,
			FreeFallProtection = 0xFE
	};
}
} 

#endif
